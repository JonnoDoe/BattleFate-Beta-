После нажатия на кнопку New Game:
    1) Создать окно с вводом имени игрока
    2) Создать окно с выбором героя
    3) Создать окно с боевой ареной

- После выбора персонажа случайно выбирается противник из пяти персонажей
  Персонаж, которого выбрал игрок, не может быть выбран, в качестве псевдо-ИИ

  Боевая арена представляет из себя:
    - Два персонажа по обе стороны экрана (Фото, имя, титул)
    - Внизу каждого персонажа находится статус-бар (ХП, МП, Атака, Заклинания и прч.)
    - В самом верху находится, в которой отображается весь ход боя
      (Количество нанесенного урона, номер хода, количесто восстановленного здоровья и т.д.)

1) Расписать в модулях систему боя каждого персонажа (Очень сложно)
2) TODO Позже сделать зелья маны и здоровья
3) TODO Позже добавить систему уклонений и критических ударов
4) TODO Позже добавить возможность сохранения, загрузки, обнуления игрового процесса



Что нужно?

 - Герои должны взаимодейтвовать между собой и по отдельности

Как реализовать?

 (Идея №1) Создать отдельные объекты для выбранных героев на время боя, чтобы вносить в них изменения
 Так как вносить изменения в объект charInfo глупо. Он предназначен для хранения информации о героях, а
 не о состоянии их во время боя.
 Каждому герою на ход дается два шага (он может совершить два любых действия).

Какие проблемы, трудности?

 - Реализация каждой способности (Двенадцать штук). Где и как прописать их скалирование/расчет?
    - (Возможное решение) Разбить объект charInfo на составные части и в них прописать способности



Поэтапное проектирование:

    1) Начинается бой
        - После нажатия кнопки 'Start' вешаются обработчики событий на необходимые DOM-элементы
        - В консоль выводится сообщение 'Fight Started'
        - В консоль выводится сообщение о соперниках вида: 'charName (charClass) Vs charName (charClass)'
        - В консоль выводится сообщение о начале первого хода: 'Round I'
        - В консоль выводится сообщение о том, какой персонах ходит: 'charClass Turn'
        - Текущее здоровье приравнивается к максимальному и выводится на экран

    2) Например, нажимаю на кнопку способности
        - Обработчик определяет какой персонаж нажал способность и ищет нужную для него
        - Передает управление другим функциям, для расчета способности, влияния ее на противника

    3) Функция Foo (1) проверяет, хватает ли MP для этого умения

        3.1) Если хватает, то передает управление другим функциям (Выполняет шаг №5)
            - В консоль выводится сообщение: 'charName (charClass) used skillName'
            - В консоль выводится сообщение о текущем запасе маны после использования способности

        3.2) Если не хватает, то передает управление функции Foo (X), которая выводит в консоль сообщение
             о нехватке маны для использования способности
            - В консоль выводится сообщение 'Not Enough Mana For skillName'
            - В консоль выводится сообщение о текущем запасе маны

    4) Функция Foo (2) расчитывает способность (Урон, защита, восстановление здоровья и т.д.)
    5) Функция Foo (3) расчитывает наносимый урон взависимости от характеристик противника (Защита, бонусы и т.д.)





Начинается игра --> Выставить счетчик на 1 --> Повесить обработчики на способности --> Нажата способность -->
--> Счетчик не изменяется --> Снимаем обработчики со способностей --> Ходит ИИ --> Счетчик +1 -->
--> Вешаем обработчики на способности




Как искать максимальное значение маны текущего персонажа?
1) Каждый раз при инициализации умения искать текущего персонажа. Создавать переменную с его максимальным запасом маны.
2) При создании динамических объектов LHeroStatus и RHeroStatus, добавлять им новое свойство "MaxMP".








Искусственный интеллект (Artificial Intelligence)

(Простой ИИ)

1) Во время хода (Активации функции ИИ), генерируется случайное число в диапазоне ( 0 - [Число умений] )
2) В зависимости от числа, используется способность, соответствующая случайному числу
3) Шаги 1-2 повторяются до окончания боя

(Средний ИИ)

1) Во время хода (Активации функции ИИ), генерируется случайное число в диапазоне ( 0 - [Число умений] )
2) Умение "Skip" никогда не используется
3) Умения используются постоянно, пока есть мана
4) Если случайно используется "Зелье маны" и мана восстанавливается, то способности начинают использоваться веовь
5) Если маны нет - спамится обычная атака

(Сложный ИИ)

1) Во время хода (Активации функции ИИ), генерируется случайное число в диапазоне ( 0 - [Число умений] )
2) ИИ постоянно следит за состоянием ХП и МП противника (Меня)
 - В зависимости от их состояния - используются "лучшие" умения для данной ситуации
 - Зелья МП используются сразу же, если не хватает МП на использования умения
3) ИИ постоянно следит за состоянием своего ХП и МП
 - Банки используются по мере надобности
4) Умение "Skip" никогда не используется
5) ИИ постоянно следит за наличием умений на нем, наносящих переодический урон